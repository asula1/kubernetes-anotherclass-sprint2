pipeline {
    agent any
    
    environment {
        // 본인의 username으로 하실 분은 수정해주세요.
        GITHUB_URL = 'https://github.com/k8s-1pro/kubernetes-anotherclass-sprint2.git'

        // 실습 넘버링
        CLASS_NUM = '2213'
    }

    stages {
        stage('릴리즈파일 체크아웃') {
            steps {
                checkout scmGit(branches: [[name: '*/main']],
                        extensions: [[$class: 'SparseCheckoutPaths',
                                      sparseCheckoutPaths: [[path: "/${CLASS_NUM}"]]]],
                        userRemoteConfigs: [[url: "${GITHUB_URL}"]])
            }
        }

        stage('Blue 배포') {
            steps {
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/blue/namespace.yaml"
				sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/blue/configmap.yaml"
				sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/blue/secret.yaml"
				sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/blue/service.yaml"
				sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/blue/deployment.yaml"
            }
        }

        stage('배포 시작') {
            steps {
                input message: '수동배포 시작', ok: "Yes"
            }
        }

        stage('Green 배포') {
            steps {
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/green/namespace.yaml"
				sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/green/configmap.yaml"
				sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/green/secret.yaml"
				sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/green/service.yaml"
				sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/green/deployment.yaml"
            }
        }

        stage('Green 전환여부 확인') {
            steps {
                script {
                    IS_SWITCHED = input message: 'Green 전환?', ok: "Yes", parameters: [booleanParam(defaultValue: true, name: 'IS_SWITCHED')]
                    if (${IS_SWITCHED}) {
                        sh "kubectl patch -n anotherclass-221 svc api-tester-2213-blue -p '{\"spec\": {\"selector\": {\"version\": \"2.0.0\", \"instance\": \"api-tester-2213-green\"}}}'"
                    }
                }
            }
        }

        stage('Blue롤백 확인') {
            steps {
                script {
                    IS_ROLLBACk = input message: 'Blue 롤백?', parameters: [choice(choices: ['done', 'rollback'], name: 'IS_ROLLBACk')]
                    if (IS_ROLLBACk == "done") {
                        sh "kubectl delete -f ./${CLASS_NUM}/deploy/k8s/blue/configmap.yaml"
                        sh "kubectl delete -f ./${CLASS_NUM}/deploy/k8s/blue/secret.yaml"
                        sh "kubectl delete -f ./${CLASS_NUM}/deploy/k8s/blue/deployment.yaml"
                        sh "kubectl delete -f ./${CLASS_NUM}/deploy/k8s/green/service.yaml"
                    }
                    if (IS_ROLLBACk == "rollback") {
                        sh "kubectl patch -n anotherclass-221 svc api-tester-2213-blue -p '{\"spec\": {\"selector\": {\"version\": \"1.0.0\", \"instance\": \"api-tester-2213-blue\"}}}'"
                    }
                }
            }
        }
    }
}